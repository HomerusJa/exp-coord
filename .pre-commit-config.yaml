default_install_hook_types: [pre-commit, pre-push]

repos:
  # --- Pre-commit ---
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-toml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.10
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix, --show-fixes]
      - id: ruff-format

  - repo: https://github.com/tox-dev/pyproject-fmt
    rev: v2.5.1
    hooks:
      - id: pyproject-fmt
        args: [--keep-full-version, --no-print-diff]

  - repo: local
    hooks:
      - id: ggshield
        name: GitGuardian Shield
        entry: ggshield secret scan pre-commit
        language: system
        pass_filenames: false
        stages: [ pre-commit ]

      - id: typer-autodoc
        name: Automatically generate the CLI docs
        entry: uv run typer src/exp_coord/cli/main.py utils docs --output docs/cli.md --title "CLI Documentation" --name exp-coord
        language: system
        pass_filenames: false
        stages: [ pre-commit ]

      - id: import-linter
        name: Run import-linter
        entry: uv run lint-imports
        language: system
        pass_filenames: false
        stages: [ pre-commit ]

  # --- Pre-push ---
  - repo: local
    hooks:
      - id: pytest
        name: Run pytest before push
        entry: uv run pytest
        language: system
        pass_filenames: false
        stages: [pre-push]
        # Run on changes to tests, the source code, or dependencies
        files: ^(tests/.*\.py|src/.*\.py|uv\.lock|pyproject\.toml)$
      - id: pyright
        name: Run pyright before push
        entry: uv run pyright
        language: system
        pass_filenames: false
        stages: [pre-push]
        # Run on changes to tests or the source code
        files: ^(tests/.*\.py|src/.*\.py)$
